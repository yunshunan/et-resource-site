name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Lint Frontend
      working-directory: ./frontend
      run: npm run lint
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
      
  test-unit:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run Frontend Unit Tests with Coverage
      working-directory: ./frontend
      run: npm run test:coverage
    
    - name: Check Coverage Thresholds
      working-directory: ./frontend
      run: |
        npx nyc check-coverage --statements 90 --branches 65 --functions 75 --lines 90
        if [ $? -ne 0 ]; then
          echo "Coverage thresholds not met!"
          exit 1
        fi
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: frontend/coverage/
    
    - name: Generate Coverage Badge
      run: |
        npm install -g coverage-badges-cli
        coverage-badges-cli --token ${{ secrets.GITHUB_TOKEN }} --source=frontend/coverage/coverage-summary.json --target=frontend/coverage-badges
    
    - name: Upload Coverage Badges
      uses: actions/upload-artifact@v3
      with:
        name: coverage-badges
        path: frontend/coverage-badges/
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Test Backend
      working-directory: ./backend
      run: npm test
  
  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test-unit
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Install Cypress Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    
    - name: Run E2E Tests
      working-directory: ./frontend
      run: npm run test:e2e:headless
      
    - name: Upload E2E Test Videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: frontend/cypress/videos/
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test-unit, test-e2e]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Upload Frontend Build
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist/
    
    - name: Upload Coverage Report to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: frontend/coverage/html
        target-folder: coverage-report
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages 